<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="root.SqlMapper">
    <select id="selectWord" resultType="map">
        select * from llm_word w where w.type != 'opener'
    </select>
    <select id="selectSymbolWord" resultType="map">
        select * from llm_word w where w.type = '기호'
    </select>
    <select id="selectContext" resultType="map">select * from plm_context c</select>
    <select id="selectCompound" resultType="map">select * from llm_word_compound c</select>
    <select id="selectGenerationTarget" resultType="root.UltronContext">
        select sq.leftword, sq.rightword, lw.word lw, rw.word rw, sq.cnt, sq.space, max(sq.pri) pri
        from llm_word lw, llm_word rw, (
            select c.leftword, c.rightword, c.cnt, c.space, uc.i, os.n = uc.sentence pri, -- 0이면 응답이 있는 컨태이너들, 널이면 응답 없는 컨태이너들
            row_number() over (partition by ifnull(os.n, container.n), uc.context, pri order by uc.i) rn
            from plm_ultron_context uc, plm_context c, plm_ultron_sentence container
            left join plm_ultron_sentence os on container.n = os.target
            where (os.n = uc.sentence or container.n = uc.sentence)
            and uc.context = c.n
            and container.opener in <foreach collection="list" item="item" open="(" separator="," close=")">#{item}</foreach>
            union all
            select c.leftword, c.rightword, c.cnt, c.space, uc.i, os.n = uc.sentence pri, -- 근데 널이 진짜 있는지 몰라서 궁금해서 일부러 널처리 안했다
            row_number() over (partition by ifnull(os.n, container.sentence), uc.context, pri, container.i order by uc.i) rn
            from plm_ultron_context uc, plm_context c, (
                select uc.sentence, p.i from plm_ultron_context uc, plm_context c, (
                <foreach collection="list" item="item" separator=" union all " index="i">select #{item} n, #{i} i</foreach>
                ) p
                where uc.context = c.n
                and c.rightword = p.n
                group by uc.sentence, p.i
            ) container left join plm_ultron_sentence os on container.sentence = os.target
            where (os.n = uc.sentence or container.sentence = uc.sentence)
            and uc.context = c.n
        ) sq
        where sq.leftword = lw.n and sq.rightword = rw.n
        group by sq.leftword, sq.rightword, sq.rn
        order by pri desc, count(*) desc, sq.i
        limit 100
    </select>
</mapper>